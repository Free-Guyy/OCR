# -*- coding: utf-8 -*-
"""OCR.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/14gJKFOLjsG-iLPnIbf6eH94YdsNZ6u6Z
"""

!pip install pytesseract

!sudo add-apt-repository ppa:alex-p/tesseract-ocr

!sudo apt install tesseract-ocr

!tesseract --version

#To download images from online 
import requests


url = "https://www.davestravelpages.com/wp-content/uploads/2019/06/Quote-17.jpg"
r = requests.get(url)

filename = '2.jpg'

with open(filename, 'wb') as out_file:
    out_file.write(r.content)

print("Download complete!")

import cv2
import numpy as np
import pytesseract
from PIL import Image


def get_string(img_path):
    # Read image with opencv
    img = cv2.imread(img_path)

    # Convert to gray
    img = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)

    # Apply dilation and erosion to remove some noise
    kernel = np.ones((1, 1), np.uint8)
    img = cv2.dilate(img, kernel, iterations=1)
    img = cv2.erode(img, kernel, iterations=1)

    # Write image after removed noise
    cv2.imwrite("noise.png", img)

    #  Apply threshold to get image with only black and white
    #img = cv2.adaptiveThreshold(img, 255, cv2.ADAPTIVE_THRESH_GAUSSIAN_C, cv2.THRESH_BINARY, 31, 2)

    # Write the image after apply opencv to do some ...
    cv2.imwrite(img_path, img)

    # Recognize text with tesseract for python
    result = pytesseract.image_to_string(Image.open(img_path))

    # Remove template file
    #os.remove(temp)

    return result


print ('Text Recognization from image')
print (get_string(filename))